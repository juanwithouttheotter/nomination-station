{"version":3,"sources":["api/moviesApi.js","components/Container/index.jsx","components/SearchBar/index.jsx","components/Button/index.jsx","components/ContainerItem/index.jsx","components/MovieCard/index.jsx","pages/Search_Page/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["MovieAPI","searchMovies","search","fetch","then","res","json","catch","err","console","log","Container","display","flow","justifyContent","alignItems","children","id","classString","className","SearchBar","props","type","value","inputValue","onChange","searchOnChange","placeholder","onKeyDown","Button","btn","onClick","btnAction","data-obj","dataObj","name","ContainerItem","order","flex","alignSelf","cls","MovieCard","btnName","src","poster","alt","title","year","btnType","Search","state","movies","nominations","event","setState","target","handleFormSearch","a","preventDefault","API","handleKeyDown","key","removeNomie","e","removeId","i","length","imdbID","splice","localStorage","setItem","JSON","stringify","addNomie","newNomie","parse","dataset","obj","push","getItem","this","renderedMovies","map","nomie","Poster","Title","Year","movie","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d368d8e9.chunk.js","sourcesContent":["const MovieAPI = {\r\n    async searchMovies(search){\r\n        let res = await fetch(`https://omdbapi.com/?apikey=fb4f4f23&type=movie&s=${search}`).then(res => res.json())\r\n        .catch(err => {console.log(err)});\r\n        return res;\r\n    }\r\n}\r\n\r\nexport default MovieAPI;","import React from 'react';\nimport './Container.css';\n\nfunction Container({display, flow, justifyContent, alignItems, children, id}) {\n    let classString = (display ? `${display} ` : '') + (flow ? `f-${flow} ` : '') + (justifyContent ? `jc-${justifyContent} ` : '') + (alignItems ? `ai-${alignItems} ` : '')\n    return <div id={id} className={classString}>{children}</div>\n}\n\nexport default Container;","//functional component\r\nimport React from 'react';\r\n\r\nfunction SearchBar (props) {\r\n    return <input type='text' value={props.inputValue} onChange={props.searchOnChange} placeholder={props.placeholder} onKeyDown={props.onKeyDown}></input>\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\nimport \"./Button.css\";\n\nfunction Button(props){\n   return <button className={props.btn} onClick={props.btnAction} data-obj={props.dataObj} id={props.id}>{props.name}</button>\n}\n\nexport default Button;","import React from 'react';\nimport './ContainerItem.css';\n\nfunction ContainerItem({ order, flex, alignSelf, children, id, cls}) {\n    let classString = (order ? `order-${order} ` : '') + (alignSelf ? `as-${alignSelf} ` : '') + (flex ? `flex-${flex} ` : '') +(cls ? cls : '');\n    return <div id={id} className={classString}>{children}</div>\n}\n\nexport default ContainerItem;","// functional component\nimport React from 'react';\nimport Button from '../Button';\nimport ContainerItem from '../ContainerItem';\nimport './MovieCard.css';\n\nfunction MovieCard(props) {\n    return (\n        <ContainerItem id={props.id + \"-Card\"} flex={'default'} cls={props.btnName} alignSelf={'center'}>\n            <img src={props.poster} alt={props.title + ' poster'}></img>\n            <div>{props.title}</div>\n            <div>{props.year}</div>\n            <Button id={props.id} btn={props.btnType} name={props.btnName} btnAction={props.btnAction} dataObj={props.dataObj} />\n        </ContainerItem>\n    )\n}\n\nexport default MovieCard;","import React, { Component } from 'react';\nimport API from \"../../api/moviesApi\";\nimport Container from \"../../components/Container\";\nimport SearchBar from \"../../components/SearchBar\";\nimport MovieCard from \"../../components/MovieCard\";\nimport Button from \"../../components/Button\";\nimport \"./Search.css\";\n\nclass Search extends Component {\n    state = {\n        inputValue: '',\n        movies: [],\n        nominations: []\n    }\n\n    async componentDidMount() {\n        const nominations = JSON.parse(localStorage.getItem(\"nominations\"));\n        if (nominations) {\n            this.setState({ nominations });\n        }\n    }\n\n    searchOnChange = (event) => {\n        this.setState({\n            inputValue: event.target.value\n        });\n    }\n    handleFormSearch = async (event) => {\n        event.preventDefault();\n        let movies = await API.searchMovies(this.state.inputValue);\n        this.setState({\n            movies: movies.Search\n        });\n    }\n    handleKeyDown = async (event) => {\n        if (event.key === \"Enter\") {\n            this.handleFormSearch(event);\n        }\n    }\n    removeNomie = (e) => {\n        const removeId = e.target.id;\n        console.log(removeId);\n        const { nominations } = this.state;\n        for (let i = nominations.length - 1; i >= 0; i--) {\n            if (nominations[i].imdbID === removeId) nominations.splice(i, 1);\n        }\n        this.setState({ nominations });\n        localStorage.setItem(\"nominations\", JSON.stringify(nominations));\n    }\n    addNomie = (e) => {\n        const newNomie = JSON.parse(e.target.dataset.obj);\n        const { nominations } = this.state;\n        nominations.push(newNomie);\n        this.setState({ nominations });\n        localStorage.setItem(\"nominations\", JSON.stringify(nominations));\n    }\n\n    render(renderedMovies = this.state.movies) {\n        return (\n            <Container display={\"flex\"} flow={\"c-nw\"} justifyContent={\"c\"} alignItems={\"c\"}>\n                <div className=\"nominations\">\n                    <h2>Your Nominations</h2>\n                    <Container id=\"nominees\" display={\"flex\"} flow={\"r-nw\"} justifyContent={\"c\"} alignItems={\"c\"}>\n                        {\n                            this.state.nominations.map(nomie => {\n                                return (\n                                    <MovieCard\n                                        key={nomie.imdbID}\n                                        id={nomie.imdbID}\n                                        poster={nomie.Poster}\n                                        title={nomie.Title}\n                                        year={nomie.Year}\n                                        btnType=\"remove\"\n                                        btnName=\"Delete\"\n                                        btnAction={this.removeNomie}\n                                    />)\n                            })\n                        }\n\n                    </Container>\n                </div>\n                <div id=\"searchBar\">\n                    <SearchBar\n                        inputValue={this.inputValue}\n                        searchOnChange={this.searchOnChange}\n                        onKeyDown={this.handleKeyDown}\n                        placeholder=\"Search Moives...\"\n                    />\n                    <Button btn=\"search\" btnAction={this.handleFormSearch} name=\"search\" />\n                </div>\n                <div>\n                    <Container id=\"search-movies\" display={'flex'} flow={'r-w'} justifyContent={'c'} alignItems={'c'}>\n                        {renderedMovies.map((movie) => {\n                            return (\n                                <MovieCard\n                                    key={movie.imdbID}\n                                    id={movie.imdbID}\n                                    poster={movie.Poster}\n                                    title={movie.Title}\n                                    year={movie.Year}\n                                    btnType=\"add\"\n                                    btnName=\"Nominate\"\n                                    btnAction={this.addNomie}\n                                    dataObj={JSON.stringify(movie)}\n                                />\n\n                            )\n\n                        })}\n                    </Container>\n                </div>\n\n            </Container>\n        )\n    }\n\n}\n\nexport default Search;","import './App.css';\nimport Search from './pages/Search_Page'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search></Search>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}